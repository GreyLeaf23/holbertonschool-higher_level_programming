# 0-add_integer.txt : test file

=======================================
"0-add_integer.py" function's intention.
=======================================

In this module, we are defining an integer addition function.

Prototype:
    def add_integer(a, b=98)

====================
How to use function.
====================

The 'add_integer(...)' returns an addition '+' of its two arguments, as LONG as
both arguments are numbers.

=====================
SUCCESSFUL Execution:
=====================

"""It can perform positive, negative, and numbers with decimal places."""
>>> add_integer = __import__('0-add_integer').add_integer
>>>
>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, -2)
98
>>>

=================
FAILED Execution:
=================

"""Cannot perform an addition with a string arguments."""
>>> add_integer = __import__('0-add_integer').add_integer
>>>
>>> add_integer(4, "School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/greyleaf/Documents/holbertonschool-higher_level_programming/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>>

"""Cannot perform an addition with NO arguments."""
>>> add_integer = __import__('0-add_integer').add_integer
>>>
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/greyleaf/Documents/holbertonschool-higher_level_programming/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 5, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>>

"""Cannot take special float 'NaN' as an argument."""
>>> add_integer = __import__('0-add_integer').add_integer
>>>
>>> add_integer(float("NaN"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/greyleaf/Documents/holbertonschool-higher_level_programming/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 9, in add_integer
    return int(a) + int(b)
ValueError: cannot convert float NaN to integer
>>>

"""Cannot perform float overflow 'inf' as argument."""
>>> add_integer = __import__('0-add_integer').add_integer
>>>
>>> add_integer(float("inf"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/greyleaf/Documents/holbertonschool-higher_level_programming/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 9, in add_integer
    return int(a) + int(b)
OverflowError: cannot convert float infinity to integer
>>> 
